version: 2
jobs:
  build:
    parallelism: 3
    working_directory: /usr/src/app
    docker:
      - image: vitalikpaprotsky/repeek-base:latest
        environment:
          RAILS_ENV: test
      - image: mongo:3.4.5
    steps:
      - checkout

      # Restore bundle cache
      - type: cache-restore
        key: repeek-{{ checksum "Gemfile.lock" }}

      # Bundle install dependencies
      - run: gem install bundler
      - run: bundle install --path vendor/bundle

      # Store bundle cache
      - type: cache-save
        key: repeek-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      # Run rspec in parallel
      - type: shell
        command: |
          bundle exec rspec --profile 10 \
                            --format documentation \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - run:
          command: |
            echo $CIRCLE_BRANCH
            echo $CIRCLE_TAG


# https://discuss.circleci.com/t/create-github-release-tag-on-success/11829
deployment:
  staging:
    tag: /.*/
    commands:
      - echo $CIRCLE_BRANCH
      - echo $CIRCLE_TAG

      # - setup_remote_docker
      #
      # # Install Docker client
      # - run:
      #     command: |
      #       set -x
      #       VER="17.03.0-ce"
      #       curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
      #       tar -xz -C /tmp -f /tmp/docker-$VER.tgz
      #       mv /tmp/docker/* /usr/bin
      #
      # # Build and push Docker image
      # - run: |
      #     TAG=1.4.0 # USE GITHUB TAG
      #     docker build -t vitalikpaprotsky/repeek-staging:$TAG -f Dockerfile.staging .
      #     docker login -u $DOCKER_USER -p $DOCKER_PASS
      #     docker push vitalikpaprotsky/repeek-staging:$TAG

      # 1. Push the image to DockerHub and deploy it to Rancher Staging with latest tag
      #    when master branch is pushed or some other branch is merged to it.
      #
      # 2. Push the image to DockerHub and deploy it to Rancher Production with a release tag
      #    when the release tag is created.
